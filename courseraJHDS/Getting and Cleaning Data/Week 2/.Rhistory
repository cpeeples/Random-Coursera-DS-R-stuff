nstall.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL")
library(RMySQL)
con &lt;- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="user",password = "password", dbname="db")
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="user",password = "password", dbname="db")
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="root",password = "cody", dbname="db")
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="root",password = "cody", dbname="db")
library(RMySQL)
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="root",password = "cody", dbname="db")
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="root",password = "csy", dbname="db")
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="root",password = "cody", dbname='db')
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="root",password = "cody", dbname="test")
close(con)
close("con")
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="root",password = "cody", dbname="test")
close("con")
dbDisconnect("con")
dbDisconnect(con)
oauth_endpoints("github")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "afa1fe51197fb5ae7572",
secret = "0adb0955fd180c0473e00daea762117cb5db1553")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
setwd("~/projects/courseraJHDS/Getting and Cleaning Data/Week 2")
myapp <- oauth_app("github",
key = "afa1fe51197fb5ae7572",
secret = "0adb0955fd180c0473e00daea762117cb5db1553")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
key = "afa1fe51197fb5ae7572",
secret = "0adb0955fd180c0473e00daea762117cb5db1553")
myapp <- oauth_app("R",
key = "afa1fe51197fb5ae7572",
secret = "0adb0955fd180c0473e00daea762117cb5db1553")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("R"), myapp)
oauth_endpoints("R")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("R")
myapp <- oauth_app("R",
key = "afa1fe51197fb5ae7572",
secret = "0adb0955fd180c0473e00daea762117cb5db1553")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("R"), myapp)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("R")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "afa1fe51197fb5ae7572",
secret = "0adb0955fd180c0473e00daea762117cb5db1553")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(hhtpuv)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
req <-with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
content(req)
names(req)
req$date
req$content
stuff<-content(req)
names(stuff)
stuff
stuff[1]
stuff[2]
stuff[3]
stuff[which(name==datasharing)]
stuff[which(stuff$name==datasharing)]
stuff$name
stuff[[1]]$name
stuff[[]]$name
classes(stuff)
class(stuff)
names(stuff)
names(stuff[[1]])
names(stuff[[2]])
names(stuff[2])
stuff[2]
stuff[2]$name
stuff[[2]]$name
stuff2<-data.frame(stuff)
nrow(stuff)
stuff2<-data.frame(unlist(stuff)
)
stuff2
nrow(stuff2)
ncol(stuff2)
stuff2<-null
stuff2<-NULL
stuff[[1]]
stuff[[1]]$forks
stuff$forks
length(stuff)
stuff[1]
data.frame(stuff[1])
data.frame(stuff[[1]])
stuff$name
stuff[,$name]
stuff[,"name"]
stuff["name"]
dim(stuff)
dimension(stuff)
str(stuff)
stuff[,,"name"]
stuff[,,,"name"]
stuff[,,,,"name"]
stuff["name"]
stuff[which(name=="datasharing")]
stuff[,which(name=="datasharing")]
stuff[which(name=="datasharing"),]
stuff[which(stuff[]$name=="datasharing"),]
stuff[which(stuff[]$name=="datasharing")]
stuff[]$name
stuff[[]]$name
names(stuff)
names(stuff[1])
names(stuff[[1]])
names(stuff[[]])
names(stuff[[:]])
names(stuff[[,]])
stuff..$name
stuff[]
stuff2<-stuff[]
stuff2==stuff
names(stuff2)
?httr
lapply(stuff,content)
?lapply
sapply(stuff)
simplify2array(stuff)
stuff2<-simplify2array(stuff)
str(stuff2)
stuff2$name
stuff2$datasharing
names(stuff2)
stuff3<-simplify2array(stuff2)
NULL->stuff2->stuff3
fromJSON(stuff2)
install.packages(fromJSON)
install.packages("rjson")
require(rjson)
fromJSON(toJSON(stuff))
stuff2<-fromJSON(toJSON(stuff))
stuff2<-fromJSON(toJSON(content(req)))
stuff2<-fromJSON(stuff)
stuff2<-fromJSON(req)
stuff2<-fromJSON(content(req)
)
fromJSON(toJSON(req))
fromJSON(toJSON(content(req))
)
str(stuff)
stuff2<-fromJSON(toJSON(content(req))
)
names(stuff2)
stuff$headers
req$headers
req$headers$content-type
req$headers$"content-type"
str(req)
fromJSON(req)
fromJSON(toJSON(req))
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
jsoned<-fromJSON(toJSON(req))
stuff<-content(req)
jsoned<-fromJSON(toJSON(stuff))
jsoned
jsoned$name
names(jsoned)
req <-with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
raw_result<-content(req)
jsoned<-fromJSON(toJSON(raw_result))
names(jsoned)
jsoned
jsoned<-fromJSON(raw_result)
jsoned<-fromJSON(toJSON(raw_result))
jsoned
str(jsoned)
class(jsoned)
jsoned<-fromJSON(toJSON(raw_result))
class(raw_result)
class(jsoned)
jsoned<-toJSON(raw_result))
jsoned<-toJSON(raw_result)
class(jsoned)
str(jsoned)
jsoned$headers
stuff<-fromJSON(jsoned)
class(stuff)
stuff
req$name
names(req)
names(req$headers)
names(req$content)
req$content
stuff2<-content(req)
names(stuff2)
str(stuff2)
df <- data.frame(matrix(unlist(stuff)),stringsAsFactors=FALSE)
df
df <- data.frame(matrix(unlist(stuff),nrow=68),stringsAsFactors=FALSE)
df <- data.frame(matrix(unlist(stuff),nrow=68,byrow=T),stringsAsFactors=FALSE)
df
names(df)
df[,1]
df <- data.frame(matrix(unlist(stuff),nrow=30,byrow=T),stringsAsFactors=FALSE)
df
df[,1]
df[,2]
unlist(stuff)
do.call(rbind.data.frame, stuff)
df<-do.call(rbind.data.frame, stuff)
df <- data.frame(matrix(unlist(stuff),nrow=68,byrow=T),stringsAsFactors=FALSE)
df <- data.frame(matrix(unlist(stuff),nrow=68,byrow=F),stringsAsFactors=FALSE)
df
df[,1]
df[,2]
df <- ldply (stuff, data.frame)
library (plyr)
df <- ldply (stuff, data.frame)
df <- ldply (jsoned, data.frame)
df
df$1
names(df)
jsoned<-fromJSON(toJSON(raw_result))
library (plyr)
df <- ldply (jsoned, data.frame)
str(stuff)
stuff[][[1]]
stuff[1][[1]]
stuff[1][[2]]
stuff[1][[0]]
stuff[1][[1]]
stuff[2][[1]]
stuff[][[1]]
stuff[1][[]]
stuff[1]
stuff[1,]
stuff[]
df <- ldply (stuff, data.frame)
do.call(cbind.data.frame,stuff)
do.call(rbind.data.frame,stuff)
str(stuff[[1]])
length(stuff)
length(stuff[[1]])
length(stuff[[2]])
length(stuff[[3]])
length(stuff[[4]])
length(stuff[4])
df <- ldply (stuff[], data.frame)
do.call(rbind.data.frame,stuff)
do.call(cbind.data.frame,stuff)
do.call(cbind.data.frame,stuff[])
df <- ldply (stuff, cbind.data.frame)
length[[stuff]]
length(stuff[[]])
length(stuff)
length(stuff[])
length(stuff[[]])
length(stuff[[1:30]])
data.frame(t(sapply(stuff,c)))
hm<-data.frame(t(sapply(stuff,c)))
names(hm)
hm$name
hm$datasharing$date
names(hm$name$datasharing)
names(hm$name)
names(hm)
str(hm$name)
hm[which(hm$name=="datasharing"),]
hm[which(hm$name=="datasharing"),"date"]
hm[which(hm$name=="datasharing"),"created_at"]
req <-with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
stuff<-content(req)
hm<-data.frame(t(sapply(stuff,c)))
names(hm)
hm[which(hm$name=="datasharing"),"created_at"]
acs<-df<-read.csv("../Week 1/ACS.csv")
acs<--read.csv("../Week 1/ACS.csv")
acs<-read.csv("../Week 1/ACS.csv")
df<-NULL
install.packages(sqldf)
install.packages("sqldf"")
""
install.packages("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
acs<-read.csv("../Week 1/ACS.csv")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
acs[which(AGEP<50),"pwgtp1"]
acs[which(acs$AGEP<50),"pwgtp1"]
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
length(unique(acs$AGEP))
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode<-readlines(con)
htmlCode<-readLines(con)
nchar(htmlCode[10])
nchar(htmlCode[c(10,20,30,100)])
df<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
df<-read.csv(GET("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"))
library(httr)
df<-read.csv(GET("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"))
con<-url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
setInternet2(TRUE)
con<-url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
con<-url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",setInternet2=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for","./q5ds.dat")
df<-read.table("q5ds.dat")
df<-read.table("q5ds.dat",header=TRUE)
df<-read.table("q5ds.dat",header=FALSE)
df<-read.table("q5ds.dat",header=FALSE,skiplines=1)
?read.table
df<-read.table("q5ds.dat",header=FALSE,skip=1)
df<-read.table("q5ds.dat",header=FALSE,skip=2)
df<-read.table("q5ds.dat",header=FALSE,skip=3)
df<-read.table("q5ds.dat",header=TRUE,skip=1)
df<-read.table("q5ds.dat",header=TRUE,skip=2)
df<-read.table("q5ds.dat",header=TRUE,skip=3)
df<-read.fwf("q5ds.dat",header=TRUE,skip=3)
?read.fwf
df<-read.fwf("q5ds.dat",widths=c(11,4,3,4,3,4,3,4,3),header=TRUE,skip=3)
df<-read.fwf("q5ds.dat",widths=c(11,4,3,4,3,4,3,4,3))
names(df)
df$V1
df<-read.fwf("q5ds.dat",widths=c(11,4,3,4,3,4,3,4,3),header=TRUE)
df<-read.fwf("q5ds.dat",widths=c(11,4,3,4,3,4,3,4,3),header=TRUE,skip=2)
df<-read.fwf("q5ds.dat",widths=c(11,4,3,4,3,4,3,4,3),header=TRUE,skip=3)
df<-read.fwf("q5ds.dat",widths=c(11,4,3,4,3,4,3,4,3),header=F,skip=3)
names(df)
df$V1
df<-read.fwf("q5ds.dat",widths=c(11,4,3,4,3,4,3,4,3),header=F,skip=4)
names(df)
df$v1
df$V1
df$V2
df<-read.fwf("q5ds.dat",widths=c(11,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),header=F,skip=4)
df$V1
df$V2
df$V3
df$V2
df<-read.fwf("q5ds.dat",widths=c(11,-4,4,-1,3,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),header=F,skip=4)
df$V1
df$V2
names(df)
sum(df$V4)
